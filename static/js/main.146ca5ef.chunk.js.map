{"version":3,"sources":["service.js","useFetchResult.js","Profile.js","logo.svg","Fallback.js","App.js","reportWebVitals.js","index.js"],"names":["getJSONHeaders","headers","Accept","capitalize","string","charAt","toUpperCase","slice","checkStatus","response","status","contentType","get","includes","json","then","data","message","statusText","errors","error","errorsString","key","Array","isArray","join","length","substr","replace","buildErrorsString","Error","body","buildResError","parseJSON","payload","JSON","parse","fetchResultReducer","state","action","type","result","lastFetchedAt","Date","now","useFetchResult","fetchResult","useReducer","dispatch","useEffect","catch","updateResult","useCallback","nextResult","onError","isLoading","isResolved","isRejected","triggerRefetch","hasFetched","api","uuid","url","fetch","Profile","useParams","toString","stack","profile","stringify","Fallback","className","src","logo","alt","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.146ca5ef.chunk.js","sourcesContent":["// react-app-polyfill covers fetch/promises\n// see https://github.com/facebook/create-react-app/blob/master/packages/react-app-polyfill/README.md\n\n// pulled from dashboard on 12/10/2020\n// token helpers\n\nconst getJSONHeaders = {\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\n// parse helpers\n\nexport const capitalize = string =>\n  string.charAt(0).toUpperCase() + string.slice(1);\n\nconst buildErrorsString = (statusText, { errors, error }) => {\n  let errorsString = \"\";\n  for (let key in errors) {\n    if (Array.isArray(errors[key])) {\n      errorsString += `${capitalize(key)}: ${errors[key].join(\", \")}, `;\n    } else {\n      errorsString += `${capitalize(key)}: ${errors[key]}, `;\n    }\n  }\n  if (errorsString.length) {\n    errorsString = errorsString\n      .substr(0, errorsString.length - 2)\n      .replace(/_/g, \" \");\n  } else {\n    errorsString = error || statusText;\n  }\n  return errorsString;\n};\n\nconst buildResError = (response, data, message) => {\n  let error = new Error(message);\n  error.status = response.status;\n  error.statusText = response.statusText;\n  error.response = response;\n  error.body = data;\n  error.errors = data.errors;\n\n  return error;\n};\n\nconst checkStatus = response => {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  }\n\n  const contentType = response.headers.get(\"content-type\");\n  if (contentType && contentType.includes(\"application/json\")) {\n    return response.json().then(data => {\n      const message = buildErrorsString(response.statusText, data);\n      const error = buildResError(response, data, message);\n\n      throw error;\n    });\n  }\n\n  throw new Error(response.statusText);\n};\n\nconst parseJSON = payload => {\n  if (typeof payload === \"string\") {\n    return JSON.parse(payload);\n  }\n  return payload.json();\n};\n\n// actual calls\n\nexport const GET = url =>\n  fetch(url, getJSONHeaders).then(checkStatus).then(parseJSON);\n","import { useCallback, useEffect, useReducer } from \"react\";\n\n// handles loading \"status\"\nfunction fetchResultReducer(state, action) {\n  switch (action.type) {\n    case \"error\": {\n      return {\n        ...state,\n        status: \"rejected\",\n        error: action.error,\n      };\n    }\n    case \"success\": {\n      return {\n        ...state,\n        status: \"resolved\",\n        result: action.result,\n        lastFetchedAt: Date.now(),\n      };\n    }\n    case \"started\": {\n      return {\n        ...state,\n        status: \"pending\",\n      };\n    }\n    case \"didInvalidate\": {\n      return {\n        ...state,\n        status: \"invalid\",\n      };\n    }\n    case \"manualUpdate\": {\n      return {\n        ...state,\n        result: action.result,\n      };\n    }\n    default: {\n      throw new Error(`Unhandled action type: ${action.type}`);\n    }\n  }\n}\n\n// pass in single 'fetchResult' api callback\n// for best results you'll want to memoize it via a useCallback to avoid endless loop\nconst useFetchResult = (fetchResult) => {\n  const [state, dispatch] = useReducer(fetchResultReducer, {\n    status: \"idle\",\n    result: null,\n    error: null,\n  });\n\n  useEffect(() => {\n    if (state.status === \"idle\" || state.status === \"invalid\") {\n      dispatch({ type: \"started\" });\n      fetchResult()\n        .then(result => dispatch({ type: \"success\", result }))\n        .catch(error => dispatch({ type: \"error\", error }));\n    }\n  }, [fetchResult, state.status]);\n\n  const updateResult = useCallback(\n    nextResult => dispatch({ type: \"manualUpdate\", result: nextResult }),\n    [dispatch]\n  );\n\n  const onError = useCallback(error => dispatch({ type: \"error\", error }), [\n    dispatch,\n  ]);\n\n  const { status, lastFetchedAt } = state;\n\n  return {\n    isLoading: status === \"idle\" || status === \"pending\",\n    isResolved: status === \"resolved\",\n    isRejected: status === \"rejected\",\n    triggerRefetch: () => {\n      dispatch({ type: \"didInvalidate\" });\n    },\n    hasFetched: !!lastFetchedAt,\n    updateResult, // use carefully! responsible for full shape of 'result'\n    onError,\n    ...state,\n  };\n};\n\nexport default useFetchResult;\n","import { useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { GET } from \"./service\"\nimport useFetchResult from \"./useFetchResult\";\n\nconst api = {\n  getProfile: (uuid) => GET(`https://dashboard.privateprep.com/feeds/profiles/${uuid}`)\n}\n\nconst Profile = () => {\n  const { uuid } = useParams();\n  const fetchResult = useCallback(() => api.getProfile(uuid), [uuid]);\n  let { isLoading, isRejected, hasFetched, result, error } = useFetchResult(\n    fetchResult\n  );\n\n  if (isLoading && !hasFetched) {\n    return <p>Loading...</p>;\n  }\n\n  if (isRejected) {\n    return (\n      <div>\n        <h1>{`Oh no! That's an error!`}</h1>\n        <p>{`Here is some more information if you want to take a look...`}</p>\n        <details>\n          <p>\n            <strong>Error:</strong> {error.message.toString()}\n          </p>\n          <p>\n            <strong>Stacktrace:</strong> {error.stack}\n          </p>\n        </details>\n        <p>Please refresh and try again. If this keeps happening, please let support@privateprep.com know!</p>\n      </div>\n    );\n  }\n\n  const { profile } = result;\n\n  return (\n    <div>\n      <pre>{JSON.stringify(profile, null, 2)}</pre>\n    </div>\n  )\n}\n\nexport default Profile\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\n\nconst Fallback = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p><strong>Good news:</strong> you've reached the profile site!</p>\n        <p><strong>Bad news:</strong> you need a specific profile link.</p>\n        <p>Contact our team for help!</p>\n      </header>\n    </div>\n  )\n}\n\nexport default Fallback;\n","import {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Profile from \"./Profile\"\nimport Fallback from \"./Fallback\"\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/:uuid\" component={Profile} />\n        <Route path=\"/\" component={Fallback} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}